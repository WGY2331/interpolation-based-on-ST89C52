C51 COMPILER V9.54   MAIN                                                                  06/17/2020 18:20:28 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE code\main.c ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) OBJECT(.\Objects\main.obj)

line level    source

   1          #include"config.h"
   2          #include"key_lcd.h"
   3          #include"drive.h"
   4          uchar code numtable[]={"0123456789"};
   5          extern int Xi,Yi,Xe,Ye;
   6                  extern uint n;
   7                  extern bit cirendflag;
   8                  
   9          void main(void) {
  10   1              
  11   1              
  12   1              lcd_init();
  13   1              delay(50);
  14   1              timer_init();
  15   1              
  16   1              //startline(0,5*150);
  17   1              //while(n)wait();
  18   1      //      startcir(4*150,150,-90,1);
  19   1      //      while(!cirendflag) wait();
  20   1              
  21   1              //pop();
  22   1              //startcir(0,5*150,150,1);
  23   1              while(1){
  24   2                      wait();
  25   2              }
  26   1      
  27   1      //      star();
  28   1      
  29   1              //startcir(0,10*150,360,1);//终点坐标,360度，顺时针
  30   1      //      while(!cirendflag) wait();
  31   1      //      startcir(0,15,360,1);
  32   1      //      while(!cirendflag) wait();
  33   1              while (1) ;
  34   1      }
  35          //void star() {
  36          //      int x=0,y=0;
  37          //      startline(5*150+ 5*150* 0.309+x, +y);//开始直线插补(终止x，终止y)
  38          //      while(n)wait();
  39          //      startline(-5*150* 0.809+x, -5*150* 0.809*3.0777 + 5*150* 0.951+y);//开始直线插补(终止x，终止y)
  40          //      while(n)wait();
  41          //      startline(x, 5*150* 0.951+y);//开始直线插补(终止x，终止y)
  42          //      while(n)wait();
  43          //      startline(5*150* 0.809+x, -5*150* 0.809 *3.0777 + 5*150* 0.951+y);//开始直线插补(终止x，终止y)
  44          //      while(n)wait();
  45          //      startline(-5*150- 5*150* 0.309+x, y);//开始直线插补(终止x，终止y)
  46          //      while(n)wait();
  47          //      startline(x, y);
  48          //      while(n)wait();
  49          //}
  50          void pop(){
  51   1              startline(0,0);
  52   1              while(n)wait();
  53   1              startcir(75,-75,180,0);
  54   1              while(!cirendflag)wait();
C51 COMPILER V9.54   MAIN                                                                  06/17/2020 18:20:28 PAGE 2   

  55   1              startline(600,300);
  56   1              while(n)wait();
  57   1              startcir(450,300,90,0);
  58   1              while(!cirendflag)wait();
  59   1              startcir(300,450,90,0);
  60   1              while(!cirendflag)wait();
  61   1              startcir(600,300,180,1);
  62   1              while(!cirendflag)wait();
  63   1              startcir(750,0,90,0);
  64   1              while(!cirendflag)wait();
  65   1              startcir(600,150,90,0);
  66   1              while(!cirendflag)wait();
  67   1              
  68   1      }
  69          
  70          
  71          
  72          void wait(){//参数位继续等待条件
  73   1              int x = Xi/15, y =Yi/15;
  74   1              if(n>0||!cirendflag){
  75   2              if(x<0){
  76   3                      lcd_wcom(0xc0 +2);
  77   3                      lcd_wdata('-');
  78   3                      x = -x;
  79   3              }
  80   2              else{
  81   3                      lcd_wcom(0xc0 +2);
  82   3                      lcd_wdata('+');
  83   3              }
  84   2              if(y<0){
  85   3                      lcd_wcom(0xc0 +10);
  86   3                      lcd_wdata('-');
  87   3                      y = -y;
  88   3              }
  89   2              else{
  90   3                      lcd_wcom(0xc0 +10);
  91   3                      lcd_wdata('+');
  92   3              }
  93   2              
  94   2              send(Xi , 'x');
  95   2              send(Yi , 'y');//发送数据
  96   2              lcd_wcom(0xc0 +3);
  97   2              lcd_wdata(numtable[x/1000%10]);
  98   2              lcd_wdata(numtable[x/100%10]);
  99   2              lcd_wdata(numtable[x/10%10]);
 100   2              lcd_wcom(0xc0 +7);
 101   2              lcd_wdata(numtable[x%10]);
 102   2                      
 103   2              lcd_wcom(0xc0 +11);
 104   2              lcd_wdata(numtable[y/1000%10]);
 105   2              lcd_wdata(numtable[y/100%10]);
 106   2              lcd_wdata(numtable[y/10%10]);
 107   2              lcd_wcom(0xc0 +15);
 108   2              lcd_wdata(numtable[y%10]);
 109   2      }
 110   1              GUI();
 111   1              
 112   1      }
 113          
 114          void delay(uchar xms)
 115          {
 116   1              uchar x, y;
C51 COMPILER V9.54   MAIN                                                                  06/17/2020 18:20:28 PAGE 3   

 117   1              for (x = xms; x > 0; x--)
 118   1                      for (y = 110; y > 0; y--);
 119   1      }
 120          //float jishux(char x,float y){
 121          ////    char i;
 122          ////    float jishu=1.0;
 123          ////    for(i=0;i<=x;i++)
 124          ////            jishu=jishu*y/i;
 125          ////    return jishu;
 126          //}
 127          //float cos(float x){
 128          ////    char i,j=-1;
 129          ////    float res=0.0;
 130          ////    for(i=0;i<10;i++){
 131          ////            j=-j;
 132          ////            res=j*jishux(2*i,x)+res;        
 133          ////    }
 134          ////    return res;
 135          //}
 136          
 137          //float sin(float x){
 138          //      char i,j=-1;
 139          //      float res=0.0;
 140          //      for(i=0;i<10;i++){
 141          //              j=-j;
 142          //              res=j*jishux(2*i+1,x)+res;      
 143          //      }
 144          //      return res;
 145          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    646    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
